/*Напишите функцию, которая принимает на вход целочисленную матрицу M M M (другими словами, просто двумерный целочисленный массив) размера rows×cols rows \times cols rows×cols,
и возвращает транспонированную матрицу MT M^T MT (тоже двумерный целочисленный массив) размера cols×rows cols \times rows cols×rows. Если в M M M на пересечении i i i-ой строки
и j j j-ого столбца стояло число x x x, то на пересечении  j j j-ой строки и i i i-ого столбца в матрице MT M^T MT тоже будет стоять число x x x,
или другими словами MT[j][i]=M[i][j] M^T[j][i] = M[i][j] MT[j][i]=M[i][j].

Обратите внимание, что вам неизвестно, каким именно способом выделялась память для массива M M M. Выделять память под массив MT M^T MT можете любым удобным вам способом.
Изменять исходную матрицу нельзя.

Требования к реализации: при выполнении этого задания вы можете определять любые вспомогательные функции. Вводить или выводить что-либо не нужно. Реализовывать функцию main не нужно.*/

int ** transpose(const int * const * m, unsigned rows, unsigned cols)
{
int **matrix = new int *[cols];

for (int i = 0; i<cols; i++)
matrix[i] = new int [rows];

for (int i=0; i<cols; i++)
{
for (int j=0; j<rows; j++)
{
matrix[i][j] = m[j][i];
}
}
return(matrix);
}

